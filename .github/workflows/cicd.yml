name: Deploy rfm-scraper-script

on:
  push:
    branches: [main, dev]

jobs:
  build:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Source
        uses: actions/checkout@v4
      - name: Build docker image
        run: docker build -t aleksandrivanov22/rfm-scraper-script -f docker-build/Dockerfile .
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish image to docker hub
        run: docker push aleksandrivanov22/rfm-scraper-script:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Create .env file
        run: |
          echo "Generating .env file"

          echo "# Autogenerated .env file" > .env
          echo "REMOTE_SHADOWSOCKS_URI=${{ secrets.REMOTE_SHADOWSOCKS_URI }}" >> .env
          echo "MONGO_HOST=${{ secrets.MONGO_HOST }}" >> .env
          echo "MONGO_USERNAME=${{ secrets.MONGO_USERNAME }}" >> .env
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env
      # Copy docker-compose and .env files to target server
      - name: copy files to target server via scp
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          port: 22
          key: ${{ secrets.DEPLOY_KEY }}
          source: "./docker-build/compose.yaml, ./docker-build/compose.prod.yaml, ./.env"
          target: "~/.deploy/${{ github.event.repository.name }}/"
      - name: remote docker-compose up via ssh
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USERNAME }}
          key: ${{ secrets.DEPLOY_KEY }}
          port: 22
          script: |
            cd ~/.deploy/${{ github.event.repository.name }}
            docker compose -f ./compose.yml -f ./compose.prod.yml pull
            docker compose -f ./compose.yml -f ./compose.prod.yml up app -d
